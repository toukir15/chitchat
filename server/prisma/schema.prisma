// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  profilePhoto String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  messages  Message[]
  roomUsers RoomUser[]

  @@map("user")
}

model Room {
  id        Int      @id @default(autoincrement())
  name      String
  roomImage String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages  Message[]
  roomUsers RoomUser[]

  @@map("room")
}

model Message {
  id        Int      @id @default(autoincrement())
  roomId    Int
  userId    Int
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("message")
}

model RoomUser {
  id        Int      @id @default(autoincrement())
  roomId    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([roomId, userId])
  @@map("roomUser")
}
